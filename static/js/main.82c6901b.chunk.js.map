{"version":3,"sources":["Clock.tsx","App.tsx","index.tsx"],"names":["getStringClock","date","toUTCString","slice","Clock","state","Date","timerId","this","window","setInterval","setState","console","info","prevProps","props","clockName","debug","clearInterval","className","Component","getRandomName","value","now","toString","App","hasClock","handleClickRigth","event","preventDefault","handleClickLeft","document","addEventListener","removeEventListener","ReactDOM","render","getElementById"],"mappings":"qMAUA,SAASA,EAAeC,GACtB,OAAOA,EAAKC,cAAcC,OAAO,IAAK,GAGjC,IAAMC,EAAb,4MACEC,MAAQ,CACNJ,KAAM,IAAIK,MAFd,EAKEC,QAAU,EALZ,uDAOE,WAAqB,IAAD,OAClBC,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEV,KAAM,IAAIK,OAE1BG,OAAOG,QAAQC,KACbb,EAAe,EAAKK,MAAMJ,SAE3B,OAdP,gCAiBE,SAAmBa,GACbN,KAAKO,MAAMC,YAAcF,EAAUE,WACrCP,OAAOG,QAAQK,MAAf,uBACkBH,EAAUE,UAD5B,eAC4CR,KAAKO,MAAMC,cApB7D,kCAyBE,WACEE,cAAcV,KAAKD,WA1BvB,oBA6BE,WACE,IAAQN,EAASO,KAAKH,MAAdJ,KACAe,EAAcR,KAAKO,MAAnBC,UAER,OACE,sBAAKG,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGH,IAGF,YAED,sBAAMG,UAAU,cAAhB,SACGnB,EAAeC,YA1C1B,GAA2BmB,a,MCJ3B,SAASC,IACP,IAAMC,EAAQhB,KAAKiB,MAAMC,WAAWrB,OAAO,GAE3C,MAAM,SAAN,OAAgBmB,GAGX,IAAMG,EAAb,4MACEpB,MAAQ,CACNqB,UAAU,EACVV,UAAW,WAHf,EAMET,QAAU,EANZ,EAuBEoB,iBAAmB,SAACC,GAClBA,EAAMC,iBAEFD,GACF,EAAKjB,SAAS,CAAEe,UAAU,KA3BhC,EA+BEI,gBAAkB,SAACF,GACbA,GACF,EAAKjB,SAAS,CAAEe,UAAU,KAjChC,uDAQE,WAAqB,IAAD,OAClBlB,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEK,UAAWK,QAC1B,MAEHU,SAASC,iBAAiB,cAAexB,KAAKmB,kBAC9CI,SAASC,iBAAiB,QAASxB,KAAKsB,mBAd5C,kCAiBE,WACEZ,cAAcV,KAAKD,SACnBwB,SAASE,oBAAoB,cAAezB,KAAKmB,kBACjDI,SAASE,oBAAoB,QAASzB,KAAKsB,mBApB/C,oBAqCE,WACE,MAAgCtB,KAAKH,MAA7BW,EAAR,EAAQA,UAAWU,EAAnB,EAAmBA,SAEnB,OACE,sBAAKP,UAAU,MAAf,UACE,6CACCO,GAAY,cAAC,EAAD,CAAOV,UAAWA,WA3CvC,GAAyBI,aCbzBc,IAASC,OACP,cAAC,EAAD,IACAJ,SAASK,eAAe,W","file":"static/js/main.82c6901b.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype Props = {\n  clockName: string;\n};\n\ntype State = {\n  date: Date,\n};\n\nfunction getStringClock(date: Date): string {\n  return date.toUTCString().slice(-12, -4);\n}\n\nexport class Clock extends Component<Props, State> {\n  state = {\n    date: new Date(),\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      this.setState({ date: new Date() });\n\n      window.console.info(\n        getStringClock(this.state.date),\n      );\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (this.props.clockName !== prevProps.clockName) {\n      window.console.debug(\n        `Renamed from ${prevProps.clockName} to ${this.props.clockName}`,\n      );\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerId);\n  }\n\n  render() {\n    const { date } = this.state;\n    const { clockName } = this.props;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {clockName}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {getStringClock(date)}\n        </span>\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport { Clock } from './Clock';\n\nimport './App.scss';\n\ntype State = {\n  hasClock: boolean,\n  clockName: string,\n};\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\nexport class App extends Component<{}, State> {\n  state = {\n    hasClock: true,\n    clockName: 'Clock-0',\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n\n    document.addEventListener('contextmenu', this.handleClickRigth);\n    document.addEventListener('click', this.handleClickLeft);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerId);\n    document.removeEventListener('contextmenu', this.handleClickRigth);\n    document.removeEventListener('click', this.handleClickLeft);\n  }\n\n  handleClickRigth = (event: Event) => {\n    event.preventDefault();\n\n    if (event) {\n      this.setState({ hasClock: false });\n    }\n  };\n\n  handleClickLeft = (event: Event) => {\n    if (event) {\n      this.setState({ hasClock: true });\n    }\n  };\n\n  render() {\n    const { clockName, hasClock } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {hasClock && <Clock clockName={clockName} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}